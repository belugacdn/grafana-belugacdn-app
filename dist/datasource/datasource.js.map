{"version":3,"sources":["../../src/datasource/datasource.js"],"names":["_","CryptoJS","moment","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","tokenObj","currentDimension","options","queries","each","targets","bind","target","hide","query","buildQueryParameters","push","filter","t","length","when","data","allQueryPromise","map","index","makeQueryCall","all","then","allResponse","result","response","d","rStart","Math","round","Date","parse","range","from","_d","toString","rEnd","to","timeFrame","path","siteName","metricName","datasourceRequest","method","error","formatRawBeluga","output","series","item","datapoints","label","status","message","title","preHeader","date","tokenId","id","token","secret","toISOString","authHeader","HmacSHA512","replace","annotation","annotationQuery","datasource","enable","iconColor","rangeRaw","dimension","mapToTextValue","resultKeys","i","r","text","value","concat","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport CryptoJS from \"../crypto-js\";\nimport moment from \"../moment\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    // Object to hold Token after auth\n    this.tokenObj = {};\n\n    // used by the mapToTextValue conversion helper\n    this.currentDimension = \"\";\n  }\n\n  query(options) {\n    var queries = [];\n    _.each(options.targets, _.bind(function (target) {\n      if (target.hide) {\n        return;\n      }\n      var query = this.buildQueryParameters(options);\n      queries.push(query);\n    }, this));\n\n    var query = this.buildQueryParameters(options);\n\n    query.targets = query.targets.filter(t => !t.hide);\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    var allQueryPromise = _.map(queries, _.bind(function (query, index) {\n      return this.makeQueryCall(query, options.targets[index], options);\n    }, this));\n    return this.q.all(allQueryPromise)\n      .then(function (allResponse) {\n        var result = [];\n        _.each(allResponse, function (response) {\n          _.each(response.data, function (d) {\n            result.push(d);\n          });\n        });\n        return { data: result };\n      });\n  }\n\n  makeQueryCall(query, target, options) {\n    var rStart = Math.round(Date.parse(options.range.from._d)/1000).toString();\n    var rEnd = Math.round(Date.parse(options.range.to._d)/1000).toString();\n    var timeFrame = rStart + '-' + rEnd;\n    var path = '/api/cdn/v2/metrics/' + target.siteName + '/' + timeFrame + '/' + target.metricName + '?output=json';\n    var url = this.url + path;\n\n    return this.backendSrv.datasourceRequest({\n      url: url,\n      method: 'GET'\n    }).then(response => {\n      if (!response.error) {\n        var result = this.formatRawBeluga(response, target);\n        return { data: result };\n      }\n    });\n  }\n\n  formatRawBeluga(data, target) {\n    if (!data.data.error){\n      var output = [];\n      if (data.data.series) {\n        data = data.data.series;\n      }\n      _.map(data, (item, index) => {\n        var datapoints = _.map(data[index].data, (d) => {\n          return [d[1], d[0]];\n        });\n        var label = target.siteName + \" - \" + data[index].name;\n        output[index] = {\n          \"target\": label,\n          \"datapoints\": datapoints\n        };\n      });\n      return output;\n    }\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/api/token/token',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        this.tokenObj = response.data;\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      }\n    });\n  }\n\n  // currently not being used\n  createAuthHeader(method, path) {\n    // Put together header to be HMAC-ed\n    var preHeader = method + \":\" + path + \":\";\n    var date = moment();\n    var tokenId = this.tokenObj.id;\n    var token = this.tokenObj.secret;\n    date = date.toISOString();\n    // date = date + \"Z\";\n    preHeader = preHeader + date;\n\n    // HMAC preHeader\n    var authHeader = CryptoJS.HmacSHA512(preHeader, token).toString();\n    authHeader = \"Token \" + tokenId + \" \" + authHeader;\n\n    return authHeader;\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n  metricFindQuery(options, dimension) {\n    var path = '';\n    if (options === 'sites') {\n      path = \"/api/cdn/v2/\" + options;\n      this.currentDimension = options;\n    }\n    else if (dimension === \"sites\") {\n      path = \"/api/cdn/v2/\" + dimension;\n      this.currentDimension = dimension;\n    }\n    else if (dimension === \"metrics\") {\n      path = \"/api/cdn/v2/\" + dimension;\n      path = path + \"/\" +  this.templateSrv.replace(options.siteName);\n      this.currentDimension = \"views\";\n    } else {\n      path = \"\";\n    }\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + path,\n      method: 'GET'\n    }).then(this.mapToTextValue.bind(this));\n  }\n\n  mapToTextValue(result) {\n    var resultKeys = [];\n    resultKeys.push(this.currentDimension);\n\n    // parse available data responses based for metrics\n    // https://docs.belugacdn.com/v2/docs/metrics-list\n    if (this.currentDimension === 'views') {\n      resultKeys.push('codes');\n      resultKeys.push('fields');\n    }\n\n    var response = [];\n    for (var i = 0;i < resultKeys.length;i++) {\n      var r = _.map(result.data[resultKeys[i]], (d) => {\n        return {\n          text: d.name,\n          value: d.name\n        };\n      });\n      response = response.concat(r);\n    }\n    return response;\n  }\n\n  buildQueryParameters(options) {\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target),\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie',\n        siteName: this.templateSrv.replace(target.siteName),\n        metricName: this.templateSrv.replace(target.metricName)\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}