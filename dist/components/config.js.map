{"version":3,"sources":["../../src/components/config.js"],"names":["_","AppConfigCtrl","$scope","$injector","backendSrv","appEditCtrl","setPreUpdateHook","preUpdate","bind","initDatasource","self","get","then","results","dsID","foundDS","forEach","ds","name","id","initUsername","initPassword","appModel","jsonData","username","password","belugacdn","type","access","url","basicAuth","basicAuthUser","basicAuthPassword","promises","push","post","put","Promise","all","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;+BAEMC,a;AACX,+BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AACzC,eAAKA,UAAL,GAAkBA,UAAlB;AACA,eAAKC,WAAL,CAAiBC,gBAAjB,CAAkC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlC;AACD;;;;sCAEW;AACV,mBAAO,KAAKC,cAAL,EAAP;AACD;;;2CAEgB;AACf,gBAAIC,OAAO,IAAX;;AAEA;AACA,mBAAOA,KAAKN,UAAL,CAAgBO,GAAhB,CAAoB,kBAApB,EAAwCC,IAAxC,CAA6C,UAASC,OAAT,EAAkB;;AAEpE;AACA,kBAAIC,OAAO,CAAX;AACA,kBAAIC,UAAU,KAAd;AACAf,gBAAEgB,OAAF,CAAUH,OAAV,EAAmB,UAASI,EAAT,EAAa;AAC9B,oBAAIF,OAAJ,EAAa;AAAE;AAAS;AACxB,oBAAIE,GAAGC,IAAH,KAAY,WAAhB,EAA6B;AAC3BH,4BAAU,IAAV;AACAD,yBAAOG,GAAGE,EAAV;AACD;AACF,eAND;;AAQA,kBAAIC,eAAe,sBAAnB;AACA,kBAAIC,eAAe,UAAnB;;AAEA,kBAAIX,KAAKY,QAAL,CAAcC,QAAd,CAAuBC,QAAvB,KAAoC,EAAxC,EAA4C;AAC1CJ,+BAAeV,KAAKY,QAAL,CAAcC,QAAd,CAAuBC,QAAtC;AACD;AACD,kBAAId,KAAKY,QAAL,CAAcC,QAAd,CAAuBE,QAAvB,KAAoC,EAAxC,EAA4C;AAC1CJ,+BAAeX,KAAKY,QAAL,CAAcC,QAAd,CAAuBE,QAAtC;AACD;;AAED;AACA,kBAAIC,YAAY;AACdR,sBAAM,WADQ;AAEdS,sBAAM,8BAFQ;AAGdC,wBAAQ,OAHM;AAIdC,qBAAK,2BAJS;AAKdC,2BAAW,IALG;AAMdC,+BAAeX,YAND;AAOdY,mCAAmBX;AAPL,eAAhB;;AAUA,kBAAIY,WAAW,EAAf;AACA,kBAAI,CAAClB,OAAL,EAAc;AACZkB,yBAASC,IAAT,CAAcxB,KAAKN,UAAL,CAAgB+B,IAAhB,CAAqB,kBAArB,EAAyCT,SAAzC,CAAd;AACD,eAFD,MAEO;AACLO,yBAASC,IAAT,CAAcxB,KAAKN,UAAL,CAAgBgC,GAAhB,CAAoB,sBAAsBtB,IAA1C,EAAgDY,SAAhD,CAAd;AACD;AACD,qBAAOW,QAAQC,GAAR,CAAYL,QAAZ,CAAP;AACD,aAzCM,CAAP;AA0CD;;;;;;;;AAEHhC,oBAAcsC,WAAd,GAA4B,wBAA5B","file":"config.js","sourcesContent":["import _ from \"lodash\";\n\nexport class AppConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n  }\n\n  preUpdate() {\n    return this.initDatasource();\n  }\n\n  initDatasource() {\n    var self = this;\n\n    // create or update existing datasource\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n\n      //check for existing datasource.\n      var dsID = 0;\n      var foundDS = false;\n      _.forEach(results, function(ds) {\n        if (foundDS) { return; }\n        if (ds.name === \"belugacdn\") {\n          foundDS = true;\n          dsID = ds.id;\n        }\n      });\n\n      var initUsername = 'your-BelugaCDN@email';\n      var initPassword = 'password';\n\n      if (self.appModel.jsonData.username !== '') {\n        initUsername = self.appModel.jsonData.username;\n      }\n      if (self.appModel.jsonData.password !== '') {\n        initPassword = self.appModel.jsonData.password;\n      }\n\n      // data source update query\n      var belugacdn = {\n        name: 'belugacdn',\n        type: 'grafana-belugacdn-datasource',\n        access: 'proxy',\n        url: 'https://api.belugacdn.com',\n        basicAuth: true,\n        basicAuthUser: initUsername,\n        basicAuthPassword: initPassword\n      };\n\n      var promises = [];\n      if (!foundDS) {\n        promises.push(self.backendSrv.post('/api/datasources', belugacdn));\n      } else {\n        promises.push(self.backendSrv.put('/api/datasources/' + dsID, belugacdn));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\nAppConfigCtrl.templateUrl = 'components/config.html';\n"]}