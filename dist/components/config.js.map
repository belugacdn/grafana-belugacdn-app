{"version":3,"sources":["../../src/components/config.js"],"names":["_","AppConfigCtrl","$scope","$injector","backendSrv","appEditCtrl","setPreUpdateHook","preUpdate","bind","initDatasource","self","get","then","results","foundDS","forEach","ds","name","promises","initUsername","initPassword","appModel","jsonData","username","password","belugacdn","type","access","url","basicAuth","basicAuthUser","basicAuthPassword","push","post","Promise","all","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;+BAEMC,a;AACX,+BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AACzC,eAAKA,UAAL,GAAkBA,UAAlB;AACA,eAAKC,WAAL,CAAiBC,gBAAjB,CAAkC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlC;AACD;;;;sCAEW;AACV,mBAAO,KAAKC,cAAL,EAAP;AACD;;;2CAEgB;AACf,gBAAIC,OAAO,IAAX;;AAEA;AACA,mBAAOA,KAAKN,UAAL,CAAgBO,GAAhB,CAAoB,kBAApB,EAAwCC,IAAxC,CAA6C,UAASC,OAAT,EAAkB;AACpE,kBAAIC,UAAU,KAAd;AACAd,gBAAEe,OAAF,CAAUF,OAAV,EAAmB,UAASG,EAAT,EAAa;AAC9B,oBAAIF,OAAJ,EAAa;AAAE;AAAS;AACxB,oBAAIE,GAAGC,IAAH,KAAY,WAAhB,EAA6B;AAC3BH,4BAAU,IAAV;AACD;AACF,eALD;AAMA,kBAAII,WAAW,EAAf;AACA,kBAAI,CAACJ,OAAL,EAAc;AACZ,oBAAIK,eAAe,sBAAnB;AACA,oBAAIC,eAAe,UAAnB;;AAEA,oBAAIV,KAAKW,QAAL,CAAcC,QAAd,CAAuBC,QAAvB,KAAoC,EAAxC,EAA4C;AAC1CJ,iCAAeT,KAAKW,QAAL,CAAcC,QAAd,CAAuBC,QAAtC;AACD;AACD,oBAAIb,KAAKW,QAAL,CAAcC,QAAd,CAAuBE,QAAvB,KAAoC,EAAxC,EAA4C;AAC1CJ,iCAAeV,KAAKW,QAAL,CAAcC,QAAd,CAAuBE,QAAtC;AACD;;AAED;AACA,oBAAIC,YAAY;AACdR,wBAAM,WADQ;AAEdS,wBAAM,8BAFQ;AAGdC,0BAAQ,OAHM;AAIdC,uBAAK,2BAJS;AAKdC,6BAAW,IALG;AAMdC,iCAAeX,YAND;AAOdY,qCAAmBX;AAPL,iBAAhB;AASAF,yBAASc,IAAT,CAActB,KAAKN,UAAL,CAAgB6B,IAAhB,CAAqB,kBAArB,EAAyCR,SAAzC,CAAd;AACD;AACD,qBAAOS,QAAQC,GAAR,CAAYjB,QAAZ,CAAP;AACD,aAjCM,CAAP;AAkCD;;;;;;;;AAEHjB,oBAAcmC,WAAd,GAA4B,wBAA5B","file":"config.js","sourcesContent":["import _ from \"lodash\";\n\nexport class AppConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n  }\n\n  preUpdate() {\n    return this.initDatasource();\n  }\n\n  initDatasource() {\n    var self = this;\n\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var foundDS = false;\n      _.forEach(results, function(ds) {\n        if (foundDS) { return; }\n        if (ds.name === \"belugacdn\") {\n          foundDS = true;\n        }\n      });\n      var promises = [];\n      if (!foundDS) {\n        var initUsername = 'your-BelugaCDN@email';\n        var initPassword = 'password';\n\n        if (self.appModel.jsonData.username !== '') {\n          initUsername = self.appModel.jsonData.username;\n        }\n        if (self.appModel.jsonData.password !== '') {\n          initPassword = self.appModel.jsonData.password;\n        }\n\n        // create datasource\n        var belugacdn = {\n          name: 'belugacdn',\n          type: 'grafana-belugacdn-datasource',\n          access: 'proxy',\n          url: 'https://api.belugacdn.com',\n          basicAuth: true,\n          basicAuthUser: initUsername,\n          basicAuthPassword: initPassword\n        };\n        promises.push(self.backendSrv.post('/api/datasources', belugacdn));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\nAppConfigCtrl.templateUrl = 'components/config.html';\n"]}